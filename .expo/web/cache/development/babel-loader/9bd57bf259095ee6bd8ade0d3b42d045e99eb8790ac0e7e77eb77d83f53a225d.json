{"ast":null,"code":"import React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport OutlinedButton from \"../UI/OutlinedButton\";\nimport { Colors } from \"../../constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction LocationPicker() {\n  function getLocationHandler() {}\n  function pickOnMapHandler() {}\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.mapPreview\n    }), _jsxs(View, {\n      style: styles.actions,\n      children: [_jsx(OutlinedButton, {\n        icon: \"location\",\n        onPress: getLocationHandler,\n        children: \"Locate User\"\n      }), _jsx(OutlinedButton, {\n        icon: \"map\",\n        onPress: pickOnMapHandler,\n        children: \"Pick on Map\"\n      })]\n    })]\n  });\n}\nexport default LocationPicker;\nvar styles = StyleSheet.create({\n  mapPreview: {\n    width: \"100%\",\n    height: 200,\n    marginVertical: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary100,\n    borderRadius: 4\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  }\n});","map":{"version":3,"names":["React","StyleSheet","View","OutlinedButton","Colors","jsx","_jsx","jsxs","_jsxs","LocationPicker","getLocationHandler","pickOnMapHandler","children","style","styles","mapPreview","actions","icon","onPress","create","width","height","marginVertical","justifyContent","alignItems","backgroundColor","primary100","borderRadius","flexDirection"],"sources":["/Users/dijgtal/Desktop/UDEMY/react native course/section 12/react_native_my_places/components/Places/LocationPicker.js"],"sourcesContent":["import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport OutlinedButton from \"../UI/OutlinedButton\";\nimport { Colors } from \"../../constants/colors\";\n\nfunction LocationPicker() {\n  function getLocationHandler() {}\n  function pickOnMapHandler() {}\n  return (\n    <View>\n      <View style={styles.mapPreview}></View>\n      <View style={styles.actions}>\n        <OutlinedButton icon=\"location\" onPress={getLocationHandler}>\n          Locate User\n        </OutlinedButton>\n        <OutlinedButton icon=\"map\" onPress={pickOnMapHandler}>\n          Pick on Map\n        </OutlinedButton>\n      </View>\n    </View>\n  );\n}\n\nexport default LocationPicker;\n\nconst styles = StyleSheet.create({\n  mapPreview: {\n    width: \"100%\",\n    height: 200,\n    marginVertical: 8,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: Colors.primary100,\n    borderRadius: 4,\n  },\n  actions: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE1B,OAAOC,cAAc;AACrB,SAASC,MAAM;AAAiC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEhD,SAASC,cAAcA,CAAA,EAAG;EACxB,SAASC,kBAAkBA,CAAA,EAAG,CAAC;EAC/B,SAASC,gBAAgBA,CAAA,EAAG,CAAC;EAC7B,OACEH,KAAA,CAACN,IAAI;IAAAU,QAAA,GACHN,IAAA,CAACJ,IAAI;MAACW,KAAK,EAAEC,MAAM,CAACC;IAAW,CAAO,CAAC,EACvCP,KAAA,CAACN,IAAI;MAACW,KAAK,EAAEC,MAAM,CAACE,OAAQ;MAAAJ,QAAA,GAC1BN,IAAA,CAACH,cAAc;QAACc,IAAI,EAAC,UAAU;QAACC,OAAO,EAAER,kBAAmB;QAAAE,QAAA,EAAC;MAE7D,CAAgB,CAAC,EACjBN,IAAA,CAACH,cAAc;QAACc,IAAI,EAAC,KAAK;QAACC,OAAO,EAAEP,gBAAiB;QAAAC,QAAA,EAAC;MAEtD,CAAgB,CAAC;IAAA,CACb,CAAC;EAAA,CACH,CAAC;AAEX;AAEA,eAAeH,cAAc;AAE7B,IAAMK,MAAM,GAAGb,UAAU,CAACkB,MAAM,CAAC;EAC/BJ,UAAU,EAAE;IACVK,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,GAAG;IACXC,cAAc,EAAE,CAAC;IACjBC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAErB,MAAM,CAACsB,UAAU;IAClCC,YAAY,EAAE;EAChB,CAAC;EACDX,OAAO,EAAE;IACPY,aAAa,EAAE,KAAK;IACpBL,cAAc,EAAE,cAAc;IAC9BC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}