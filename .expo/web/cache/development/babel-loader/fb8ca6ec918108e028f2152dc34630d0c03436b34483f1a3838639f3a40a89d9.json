{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport AllPlaces from \"./screens/AllPlaces\";\nimport AddPlace from \"./screens/AddPlace\";\nimport IconButton from \"./components/UI/IconButton\";\nimport { Colors } from \"./constants/colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"dark\"\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerStyle: {\n            backgroundColor: Colors.primary500\n          },\n          headerTintColor: Colors.gray700,\n          contentStyle: {\n            backgroundColor: Colors.gray700\n          }\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"AllPlaces\",\n          component: AllPlaces,\n          options: function options(_ref) {\n            var navigation = _ref.navigation;\n            return {\n              title: \"Your Favorite Places\",\n              headerRight: function headerRight(_ref2) {\n                var tintColor = _ref2.tintColor;\n                return _jsx(IconButton, {\n                  icon: \"add\",\n                  size: 24,\n                  color: tintColor,\n                  onPress: function onPress() {\n                    return navigation.navigate(\"AddPlace\");\n                  }\n                });\n              }\n            };\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"AddPlace\",\n          component: AddPlace,\n          options: {\n            title: \"Add a new Place\"\n          }\n        })]\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","NavigationContainer","createNativeStackNavigator","AllPlaces","AddPlace","IconButton","Colors","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","App","children","style","Navigator","screenOptions","headerStyle","backgroundColor","primary500","headerTintColor","gray700","contentStyle","Screen","name","component","options","_ref","navigation","title","headerRight","_ref2","tintColor","icon","size","color","onPress","navigate"],"sources":["/Users/dijgtal/Desktop/UDEMY/react native course/section 12/react_native_my_places/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\n\nimport AllPlaces from \"./screens/AllPlaces\";\nimport AddPlace from \"./screens/AddPlace\";\nimport IconButton from \"./components/UI/IconButton\";\nimport { Colors } from \"./constants/colors\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"dark\" />\n      <NavigationContainer>\n        <Stack.Navigator\n          screenOptions={{\n            headerStyle: { backgroundColor: Colors.primary500 },\n            headerTintColor: Colors.gray700,\n            contentStyle: { backgroundColor: Colors.gray700 },\n          }}\n        >\n          <Stack.Screen\n            name=\"AllPlaces\"\n            component={AllPlaces}\n            options={({ navigation }) => ({\n              title: \"Your Favorite Places\",\n              headerRight: ({ tintColor }) => (\n                <IconButton\n                  icon=\"add\"\n                  size={24}\n                  color={tintColor}\n                  onPress={() => navigation.navigate(\"AddPlace\")}\n                />\n              ),\n            })}\n          />\n          <Stack.Screen\n            name=\"AddPlace\"\n            component={AddPlace}\n            options={{\n              title: \"Add a new Place\",\n            }}\n          />\n        </Stack.Navigator>\n      </NavigationContainer>\n    </>\n  );\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAE3E,OAAOC,SAAS;AAChB,OAAOC,QAAQ;AACf,OAAOC,UAAU;AACjB,SAASC,MAAM;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5C,IAAMC,KAAK,GAAGX,0BAA0B,CAAC,CAAC;AAE1C,eAAe,SAASY,GAAGA,CAAA,EAAG;EAC5B,OACEJ,KAAA,CAAAE,SAAA;IAAAG,QAAA,GACEP,IAAA,CAACR,SAAS;MAACgB,KAAK,EAAC;IAAM,CAAE,CAAC,EAC1BR,IAAA,CAACP,mBAAmB;MAAAc,QAAA,EAClBL,KAAA,CAACG,KAAK,CAACI,SAAS;QACdC,aAAa,EAAE;UACbC,WAAW,EAAE;YAAEC,eAAe,EAAEd,MAAM,CAACe;UAAW,CAAC;UACnDC,eAAe,EAAEhB,MAAM,CAACiB,OAAO;UAC/BC,YAAY,EAAE;YAAEJ,eAAe,EAAEd,MAAM,CAACiB;UAAQ;QAClD,CAAE;QAAAR,QAAA,GAEFP,IAAA,CAACK,KAAK,CAACY,MAAM;UACXC,IAAI,EAAC,WAAW;UAChBC,SAAS,EAAExB,SAAU;UACrByB,OAAO,EAAE,SAAAA,QAAAC,IAAA;YAAA,IAAGC,UAAU,GAAAD,IAAA,CAAVC,UAAU;YAAA,OAAQ;cAC5BC,KAAK,EAAE,sBAAsB;cAC7BC,WAAW,EAAE,SAAAA,YAAAC,KAAA;gBAAA,IAAGC,SAAS,GAAAD,KAAA,CAATC,SAAS;gBAAA,OACvB1B,IAAA,CAACH,UAAU;kBACT8B,IAAI,EAAC,KAAK;kBACVC,IAAI,EAAE,EAAG;kBACTC,KAAK,EAAEH,SAAU;kBACjBI,OAAO,EAAE,SAAAA,QAAA;oBAAA,OAAMR,UAAU,CAACS,QAAQ,CAAC,UAAU,CAAC;kBAAA;gBAAC,CAChD,CAAC;cAAA;YAEN,CAAC;UAAA;QAAE,CACJ,CAAC,EACF/B,IAAA,CAACK,KAAK,CAACY,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAEvB,QAAS;UACpBwB,OAAO,EAAE;YACPG,KAAK,EAAE;UACT;QAAE,CACH,CAAC;MAAA,CACa;IAAC,CACC,CAAC;EAAA,CACtB,CAAC;AAEP"},"metadata":{},"sourceType":"module","externalDependencies":[]}